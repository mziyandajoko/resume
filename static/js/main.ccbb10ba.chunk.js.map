{"version":3,"sources":["components/Layout.jsx","components/Footer.jsx","pages/About.jsx","components/LoadWorkData.jsx","dataFiles/WorkData.js","pages/Work.jsx","pages/ExpectIn.jsx","pages/Page404.jsx","components/NavigationBar.jsx","App.js","serviceWorker.js","index.js"],"names":["Layout","props","Container","children","Footer","Fragment","Row","Col","lg","href","About","src","alt","Button","Component","LoadWorkData","xs","name","JobTitle","period","position","RoleDiscription","CompanySite","DevTools","WorkData","id","Role","Work","data","map","item","key","ExpectIn","Page404","NavigationBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ccbb10ba.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\n\nconst Layout = (props) => <Container>{props.children}</Container>;\n\nexport default Layout;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Layout from \"./Layout\";\n\nfunction Footer() {\n  return (\n    <React.Fragment>\n      <Layout>\n        <Row>\n          <Col lg={3}>\n            <a href=\"#\">facebook</a>\n          </Col>\n          <Col lg={3}>\n            <a href=\"#\">GitHub</a>\n          </Col>\n          <Col lg={3}>\n            <a href=\"#\">LinkedIn</a>\n          </Col>\n          <Col lg={3}>\n            <a href=\"#\">StackOverflow</a>\n          </Col>\n        </Row>\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { Row, Col, Button } from \"react-bootstrap\";\nimport Footer from \"../components/Footer\";\nclass About extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <section>\n          <Row>\n            <Col>\n              <p>I'm Joko Mziyanda</p>\n              <span>Web/App Developer</span>\n              <div>\n                <img src=\"\" alt=\"Profile \" />\n                <p>\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                  Quibusdam doloribus praesentium voluptatem esse beatae aliquam\n                  dolore corrupti sequi rerum officiis eos hic quas, at\n                  blanditiis libero aspernatur nemo ratione earum?\n                </p>\n              </div>\n            </Col>\n          </Row>\n        </section>\n        <section>\n          <Row>\n            <Col>\n              <h1>What I can do</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={6}>\n              <img src=\"\" alt=\"Profile Image\" />\n            </Col>\n            <Col lg={6}>\n              <span>Web/App Developer</span>\n              <div>\n                <p>\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                  Quibusdam doloribus praesentium voluptatem esse beatae aliquam\n                  dolore corrupti sequi rerum officiis eos hic quas, at\n                  blanditiis libero aspernatur nemo ratione earum?\n                </p>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={6}>\n              <span>Web/App Developer</span>\n              <div>\n                <p>\n                  Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                  Quibusdam doloribus praesentium voluptatem esse beatae aliquam\n                  dolore corrupti sequi rerum officiis eos hic quas, at\n                  blanditiis libero aspernatur nemo ratione earum?\n                </p>\n              </div>\n            </Col>\n            <Col lg={6}>\n              <img src=\"#\" alt=\"Profile Image\" />\n            </Col>\n          </Row>\n        </section>\n        <section>\n          <h1>I can help</h1>\n          <h4>I'm currently available for freelance or permanent work</h4>\n          <p>\n            Have any Question or project that I can work on or what to know more\n            about what I can offer and my experiance and expertation,please do\n            get in touch.\n          </p>\n          <Button>Message Me</Button>\n        </section>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nfunction LoadWorkData(props) {\n  return (\n    <React.Fragment>\n      <Row>\n        <Col xs={6}>\n          <p>Name: {props.LoadWorkData.name}</p>\n          <p>JobTitle: {props.LoadWorkData.JobTitle}</p>\n          <p>Period: {props.LoadWorkData.period}</p>\n          <p>Position: {props.LoadWorkData.position}</p>\n          <p>RoleDiscription: {props.LoadWorkData.RoleDiscription}</p>\n          <p>CompanySite: {props.LoadWorkData.CompanySite}</p>\n          <p>DevTools: {props.LoadWorkData.DevTools}</p>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n}\n\nexport default LoadWorkData;\n","const WorkData = [\n  {\n    id: \"1\",\n    name: \"NativeVML\",\n    JobTitle: \"Intern\",\n    period: \"\",\n    position: \"Junior\",\n    RoleDiscription: \"\",\n    CompanySite: \"\",\n    DevTools: [\n      \"HTML\",\n      \"CSS\",\n      \"JavaScript\",\n      \"Bootstrap\",\n      \"BitBucket\",\n      \"Dust.js\",\n      \"Nunjunks.js\",\n      \"Jira\",\n      \"PhotoShop\",\n      \"Illustrator\",\n    ],\n  },\n  {\n    id: \"2\",\n    name: \"Culture Systems\",\n    JobTitle: \"Independent Contractor\",\n    period: \"\",\n    position: \"Junior\",\n    RoleDiscription: \"\",\n    CompanySite: \"\",\n    DevTools: [\n      \"HTML\",\n      \"CSS\",\n      \"JavaScript\",\n      \"Bootstrap\",\n      \"BitBucket\",\n      \"Dust.js\",\n      \"Jira\",\n      \"\",\n    ],\n  },\n  {\n    id: \"3\",\n    name: \"Culture Systems\",\n    JobTitle: \"Independent Contractor\",\n    period: \"01/10/2019 - 29/02/2020\",\n    position: \"Junior\",\n    Role: \"Flutter developer\",\n    RoleDiscription: \"\",\n    CompanySite: \"\",\n    DevTools: [\"Flutter\", \"BitBucket\", \"Jira\"],\n  },\n  {\n    id: \"4\",\n    name: \"BlackTech\",\n    JobTitle: \"Independent Contractor\",\n    period: \"01/06/2020 - 31/07/2020\",\n    position: \"Junior\",\n    Role: \"Flutter developer\",\n    RoleDiscription: \"\",\n    CompanySite: \"\",\n    DevTools: [\"Flutter\", \"Gitlab\"],\n  },\n];\n\nexport default WorkData;\n","import React from \"react\";\nimport LoadWorkData from \"../components/LoadWorkData\";\nimport WorkData from \"../dataFiles/WorkData\";\n\nfunction Work() {\n  const data = WorkData.map((item) => (\n    <LoadWorkData key={item.id} LoadWorkData={item} />\n  ));\n\n  return (\n    <React.Fragment>\n      <h1>Work Experiance</h1>\n      <span>{data}</span>\n    </React.Fragment>\n  );\n}\nexport default Work;\n","import React from \"react\";\n\nconst ExpectIn = () => (\n  <h1>Hi I am Joko I have experiance in the Following </h1>\n);\n\nexport default ExpectIn;\n","import React from \"react\";\n\nconst Page404 = () => <h1>Oops Looks like you searching for a wrong page</h1>;\n\nexport default Page404;\n","import React from \"react\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst NavigationBar = () => (\n  <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n    <Navbar.Brand href=\"#home\">Joko Mziyanda Resume</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\n      <Nav className=\"ml-auto\">\n        <Nav.Link href=\"/\">About</Nav.Link>\n        <Nav.Link href=\"/pages/Work\">Work</Nav.Link>\n        <Nav.Link href=\"/pages/ExpectIn\">ExpectIn</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n);\n\nexport default NavigationBar;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./pages/About\";\nimport Work from \"./pages/Work\";\nimport ExpectIn from \"./pages/ExpectIn\";\nimport Page404 from \"./pages/Page404\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport Layout from \"./components/Layout\";\nimport Footer from \"./components/Footer\";\nfunction App() {\n  return (\n    <React.Fragment>\n      <NavigationBar />\n      <Layout>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={About} />\n            <Route path=\"/pages/Work\" component={Work} />\n            <Route path=\"/pages/ExpectIn\" component={ExpectIn} />\n            <Route component={Page404} />\n          </Switch>\n        </Router>\n      </Layout>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}